#include <iostream>
using namespace std;
class node
{

public:
    int data;
    node *next;

    node(int d)
    {
        this->data = d;
        this->next = NULL;
    }
};

void insertathead(node *&head, int d)
{
    node *temp = new node(d);
    temp->next = head;
    head = temp;
}

void print(node *&head)
{
    node *temp = head;
    while (temp != NULL)
    {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

node *reverse(node* &head)
{
    if(head==NULL || head->next==NULL){
        cout<<"l";
           return head;
    }
    node *curr = head;
    node *prev = NULL;
    node*forward=NULL;
    while (curr!=NULL)
    {            

        forward=curr->next; 
        curr->next=prev;
        prev=curr;
        curr=forward;
       cout<<"h";
    }
    return prev;
}
void insertattail(node *&tail, int d)
{
    node *temp = new node(d);
    tail->next = temp;
    tail = temp;
}
void reverse2(node* &head,node * curr,node* prev){
    if(curr==NULL){
        head=prev;
        return;
    }
    node*forward=curr->next;
    reverse2(head,forward,curr);
    curr->next=prev;
    
}
int main()
{
    node *node1 = new node(10);
    node*tail=node1;
    node*head=node1;
     node *curr = head;
    node *prev = NULL;
   insertattail(tail,34);
   insertattail(tail,36);

   insertattail(tail,37);
   insertattail(tail,38);
   insertattail(tail,39);
   insertattail(tail,88);
   insertattail(tail,06);
   insertattail(tail,43);
   print(head);

   reverse2(head,curr,prev);
   print(head);
  reverse(head);
   print(head);
    return 0;
}

